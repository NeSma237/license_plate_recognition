# -*- coding: utf-8 -*-
"""license_plate_recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LTh7lSbx0ZyWMGNGZWOeJA-BAgV5iLWG
"""

!pip install ultralytics roboflow

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="uUc8XeOE8NrVIvsvhahF")
project = rf.workspace("nesma-4qzxa").project("license-plate-recognition-rxg4e-znlxo")
version = project.version(1)
dataset = version.download("yolov11")

from ultralytics import YOLO

model = YOLO("yolov8n.pt")

# model traning
model.train( data="/content/License-Plate-Recognition-1/data.yaml",epochs=15,imgsz=640, batch=8)

from IPython.display import Image as IPyImage
IPyImage(filename='/content/runs/detect/train/confusion_matrix.png', width=600)

from IPython.display import Image as IPyImage

IPyImage(filename=f'/content/runs/detect/train/results.png', width=600)

model.predict(source="/content/2.mp4", save=True, conf=0.4)

import os
os.listdir('runs/detect')

import cv2
from IPython.display import display, HTML
from base64 import b64encode

import cv2

# تحويل AVI إلى MP4
input_path = "/content/runs/detect/train2/2.avi"
output_path = "/content/runs/detect/train2/2_converted.mp4"

# تحميل الفيديو
cap = cv2.VideoCapture(input_path)

# إعدادات الفيديو الجديد
fourcc = cv2.VideoWriter_fourcc(*'mp4v')
out = cv2.VideoWriter(output_path, fourcc, 20.0, (int(cap.get(3)), int(cap.get(4))))

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    out.write(frame)

cap.release()
out.release()

from IPython.display import HTML
from base64 import b64encode

def show_video(path):
    mp4 = open(path,'rb').read()
    data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
    return HTML(f"""
    <video width=700 controls>
        <source src="{data_url}" type="video/mp4">
    </video>""")

# عرض الفيديو الجديد
show_video("/content/runs/detect/train2/2_converted.mp4")

model.predict(source="/content/3.mp4", save=True, conf=0.4)

import cv2

# تحويل AVI إلى MP4
input_path = "/content/runs/detect/train3/3.avi"
output_path = "/content/runs/detect/train3/3_converted.mp4"

# تحميل الفيديو
cap = cv2.VideoCapture(input_path)

# إعدادات الفيديو الجديد
fourcc = cv2.VideoWriter_fourcc(*'mp4v')
out = cv2.VideoWriter(output_path, fourcc, 20.0, (int(cap.get(3)), int(cap.get(4))))

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    out.write(frame)

cap.release()
out.release()

from IPython.display import HTML
from base64 import b64encode

def show_video(path):
    mp4 = open(path,'rb').read()
    data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
    return HTML(f"""
    <video width=700 controls>
        <source src="{data_url}" type="video/mp4">
    </video>""")

# عرض الفيديو الجديد
show_video("/content/runs/detect/train3/3_converted.mp4")

from IPython.display import Image as IPyImage

IPyImage(filename=f'/content/runs/detect/train/train_batch3095.jpg', width=600)

IPyImage(filename=f'/content/runs/detect/train/val_batch0_pred.jpg', width=600)